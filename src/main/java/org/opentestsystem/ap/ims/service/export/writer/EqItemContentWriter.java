package org.opentestsystem.ap.ims.service.export.writer;

import org.apache.commons.lang3.StringUtils;
import org.opentestsystem.ap.common.model.EqItem;
import org.opentestsystem.ap.common.model.EqPart;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.ims.model.export.AdditionalInfo;
import org.opentestsystem.ap.ims.model.export.EqExportData;
import org.opentestsystem.ap.ims.model.export.ItemExport;
import org.springframework.data.util.Pair;
import org.springframework.stereotype.Component;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Component
public class EqItemContentWriter extends PdfContentWriter implements ItemContentWriter {
    private static final String template = "eq-export";

    @Override
    public boolean supportsItemType(final Item item) {
        return item instanceof EqItem;
    }

    @Override
    public String getHtml(final ItemExport itemExport) {
        EqItem eqItem = (EqItem) itemExport.getItem();
        List<EqPart> parts = eqItem.getCore().getEn().getParts();

        Pair<String, String> promptContent = getPromptContent(itemExport, eqItem);

        AdditionalInfo additionalInfo = AdditionalInfo.create(itemExport);
        EqExportData exportData;

        String rubric = translateEnglishContent(itemExport, eqItem.getCore().getScoring().getRubric());
        exportData = new EqExportData(eqItem.getId(), promptContent.getFirst(), promptContent.getSecond(), additionalInfo, itemExport.isIncludeRubrics(), parts, rubric);

        Map<String, Object> data = new HashMap<>();
        data.put("data", exportData);

        String html = convertHtml(template, data, itemExport);

        //TODO - Remove before final commit
        writeHtmlToFile(itemExport, html);

        return html;
    }

    private Pair<String, String> getPromptContent(ItemExport itemExport, EqItem item) {
        String englishContent = translateEnglishContent(itemExport, item.getCore().getEn().getPrompt());

        String spanishContent = StringUtils.EMPTY;
        if (item.getTranslations() != null && item.getTranslations().getEsp() != null) {
            spanishContent = translateSpanishContent(itemExport, item.getTranslations().getEsp().getPrompt());
        }

        return Pair.of(englishContent, spanishContent);
    }
}
