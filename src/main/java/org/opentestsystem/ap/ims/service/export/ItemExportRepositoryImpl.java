package org.opentestsystem.ap.ims.service.export;

import org.opentestsystem.ap.common.assembler.AppAssembler;
import org.opentestsystem.ap.common.client.GitClient;
import org.opentestsystem.ap.common.config.ItemBankProperties;
import org.opentestsystem.ap.common.repository.ItemRepository;
import org.opentestsystem.ap.common.saaif.transformer.TransformerFactory;
import org.opentestsystem.ap.common.security.SecurityUtil;
import org.opentestsystem.ap.common.util.ImageGenerator;
import org.springframework.stereotype.Repository;

import java.nio.file.Path;

@Repository
public class ItemExportRepositoryImpl implements ItemExportRepository {
    private final AppAssembler appAssembler;
    private final SecurityUtil securityUtil;
    private final ItemBankProperties itemBankProperties;
    private final ItemRepository itemRepository;
    private final ImageGenerator imageGenerator;
    private final TransformerFactory transformerFactory;

    public ItemExportRepositoryImpl(final AppAssembler appAssembler,
                                    final SecurityUtil securityUtil,
                                    final ItemBankProperties itemBankProperties,
                                    final ItemRepository itemRepository,
                                    final ImageGenerator imageGenerator,
                                    final TransformerFactory transformerFactory) {
        this.appAssembler = appAssembler;
        this.securityUtil = securityUtil;
        this.itemBankProperties = itemBankProperties;
        this.itemRepository = itemRepository;
        this.imageGenerator = imageGenerator;
        this.transformerFactory = transformerFactory;
    }

    @Override
    public Path cloneItemForExport(final Path exportDirectory, final String itemId) {
        final String legacyId = this.itemRepository.findLegacyItemId(itemId);

        // TODO - This currently goes to Gitlab but should be changed to leverage the new IAT data source
        GitClient gitClient = GitClient.newGitClientNoParentFolderAndCustomDirectory(
                itemBankProperties,
                securityUtil.getItemBankUser(),
                itemId,
                legacyId,
                appAssembler,
                exportDirectory,
                imageGenerator,
                transformerFactory);

        gitClient.cloneRemoteRepository();

        return gitClient.getLocalRepositoryPath();
    }
}
