package org.opentestsystem.ap.ims.service.export;

import com.itextpdf.io.font.constants.StandardFonts;
import com.itextpdf.kernel.events.Event;
import com.itextpdf.kernel.events.IEventHandler;
import com.itextpdf.kernel.events.PdfDocumentEvent;
import com.itextpdf.kernel.font.PdfFontFactory;
import com.itextpdf.kernel.geom.Rectangle;
import com.itextpdf.kernel.pdf.canvas.PdfCanvas;
import com.itextpdf.layout.Document;

import java.io.IOException;

public class ItemHeaderListener implements IEventHandler {
    private final String itemId;
    private final Document doc;

    public ItemHeaderListener(final String itemId, final Document doc) {
        this.itemId = itemId;
        this.doc = doc;
    }

    @Override
    public void handleEvent(final Event event) {
        PdfDocumentEvent docEvent = (PdfDocumentEvent) event;
        PdfCanvas canvas = new PdfCanvas(docEvent.getPage());
        Rectangle pageSize = docEvent.getPage().getPageSize();
        canvas.beginText();
        try {
            canvas.setFontAndSize(PdfFontFactory.createFont(StandardFonts.TIMES_BOLD), 12);
        } catch (IOException e) {
            throw new RuntimeException("Unable to set font for header", e);
        }
        canvas.moveText((pageSize.getRight() - doc.getRightMargin() - (pageSize.getLeft() + doc.getLeftMargin())) / 2 + doc.getLeftMargin(), pageSize.getTop() - doc.getTopMargin() + 10)
                .showText("Item " + itemId)
                .endText()
                .release();
    }
}
