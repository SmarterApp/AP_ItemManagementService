package org.opentestsystem.ap.ims.service.export.writer;

import com.itextpdf.html2pdf.ConverterProperties;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.McItem;
import org.opentestsystem.ap.common.saaif.item.ItemRelease;
import org.springframework.stereotype.Component;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Component
public class McItemContentWriter extends PdfContentWriter implements ItemContentWriter {
    private static final String template = "mc-export";

    @Override
    public boolean supportsItemType(final Item item) {
        return item instanceof McItem;
    }

    @Override
    public void addContent(final PdfWriter pdfWriter, final Document document, final Item item, final ItemRelease itemRelease, ConverterProperties properties) {
//        Map<String, List<ItemRelease.Item.Content>> contentLanguages = groupItemContentByLanguage(itemRelease);
//        addPromptToDocument(document, contentLanguages, properties);
//
//        ItemRelease.Item.Content english = contentLanguages.get("ENU").get(0);
//
//        ItemRelease.Item.Content.Optionlist options = english.getOptionlist();
//
//        if(options.getOption() != null) {
//            options.getOption().forEach(option -> addHtmlToPdf(document, properties, option.getVal()));
//        }

        Map<String, List<ItemRelease.Item.Content>> contentLanguages = groupItemContentByLanguage(itemRelease);

        StringBuilder sb = new StringBuilder();
        for(ItemRelease.Item.Content content : contentLanguages.get(englishCode)) {
            sb.append(content.getStem());
        }

        Map<String, String> data = new HashMap<>();
        data.put("value", sb.toString());

        String html = convertHtml(template, data);

        addHtmlToPdf(document, properties, html);
    }
}
