package org.opentestsystem.ap.ims.service.export;

import com.itextpdf.html2pdf.ConverterProperties;
import com.itextpdf.html2pdf.HtmlConverter;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.IBlockElement;
import com.itextpdf.layout.element.IElement;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.WerItem;
import org.opentestsystem.ap.common.saaif.item.ItemRelease;
import org.springframework.stereotype.Component;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.util.List;
import java.util.Map;

import static java.util.stream.Collectors.groupingBy;

@Component
public class WerItemContentWriter implements ItemContentWriter {
    @Override
    public boolean supportsItemType(final Item item) {
        return item instanceof WerItem;
    }

    private Map<String, List<ItemRelease.Item.Content>> groupContentByLanguage(final ItemRelease itemRelease) {
        return itemRelease.getItem().getContent().stream()
                .collect(groupingBy(ItemRelease.Item.Content::getLanguage));
    }

    @Override
    public void addContent(final PdfWriter pdfWriter, final Document document, final Item item, final ItemRelease itemRelease) {
        Map<String, List<ItemRelease.Item.Content>> contentLanguages = groupContentByLanguage(itemRelease);

        ItemRelease.Item.Content english = contentLanguages.get("ENU").get(0);
        ConverterProperties properties = new ConverterProperties();

        try {
            List<IElement> elements = HtmlConverter.convertToElements(new ByteArrayInputStream(english.getStem().getBytes()), properties);

            for (IElement element : elements) {
                document.add((IBlockElement)element);
            }
        } catch (IOException e) {
            throw new RuntimeException("Error encountered when converting content to PDF", e);
        }
    }
}
