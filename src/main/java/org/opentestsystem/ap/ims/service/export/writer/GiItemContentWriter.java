package org.opentestsystem.ap.ims.service.export.writer;

import com.itextpdf.html2pdf.ConverterProperties;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import org.opentestsystem.ap.common.model.GiItem;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.ims.model.export.AdditionalInfo;
import org.opentestsystem.ap.ims.model.export.GiExportData;
import org.opentestsystem.ap.ims.model.export.ItemExport;
import org.springframework.stereotype.Component;

import java.util.HashMap;
import java.util.Map;

@Component
public class GiItemContentWriter extends PdfContentWriter implements ItemContentWriter {
    private static final String template = "gi-export";

    @Override
    public boolean supportsItemType(final Item item) {
        return item instanceof GiItem;
    }

    @Override
    public void addContent(final PdfWriter pdfWriter, final Document document, ConverterProperties properties, ItemExport itemExport) {
        Map<String, Object> data = new HashMap<>();

        GiItem giItem = (GiItem) itemExport.getItem();

        String promptContent = getPromptContent(itemExport.getItemRelease());
        String rubricContent = translateEnglishContent(itemExport, giItem.getCore().getScoring().getRubric());

        data.put("data", new GiExportData(giItem.getId(), promptContent, AdditionalInfo.create(itemExport), itemExport.isIncludeRubrics(), rubricContent));
        String html = convertHtml(template, data);

        writeHtmlToFile(itemExport, html);

        addHtmlToPdf(document, properties, itemExport, html);
    }
}
