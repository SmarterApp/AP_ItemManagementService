package org.opentestsystem.ap.ims.service.export.writer;

import org.apache.commons.lang3.StringUtils;
import org.opentestsystem.ap.common.model.GiItem;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.ims.model.export.AdditionalInfo;
import org.opentestsystem.ap.ims.model.export.GiExportData;
import org.opentestsystem.ap.ims.model.export.ItemExport;
import org.springframework.data.util.Pair;
import org.springframework.stereotype.Component;

import java.util.HashMap;
import java.util.Map;

@Component
public class GiItemContentWriter extends PdfContentWriter implements ItemContentWriter {
    private static final String template = "gi-export";

    @Override
    public boolean supportsItemType(final Item item) {
        return item instanceof GiItem;
    }

    @Override
    public String getHtml(ItemExport itemExport) {
        Map<String, Object> data = new HashMap<>();

        GiItem giItem = (GiItem) itemExport.getItem();

        Pair<String, String> promptContent = getPromptContent(itemExport, giItem);
        String rubricContent = translateEnglishContent(itemExport, giItem.getCore().getScoring().getRubric());

        data.put("data", new GiExportData(giItem.getId(), promptContent.getFirst(), promptContent.getSecond(), AdditionalInfo.create(itemExport), itemExport.isIncludeRubrics(), rubricContent));
        String html = convertHtml(template, data, itemExport);

        writeHtmlToFile(itemExport, html);

        return html;
    }

    private Pair<String, String> getPromptContent(ItemExport itemExport, GiItem item) {
        String englishContent = translateEnglishContent(itemExport, item.getCore().getEn().getPrompt());

        String spanishContent = StringUtils.EMPTY;
        if (item.getTranslations() != null && item.getTranslations().getEsp() != null) {
            spanishContent = translateSpanishContent(itemExport, item.getTranslations().getEsp().getPrompt());
        }

        return Pair.of(englishContent, spanishContent);
    }
}
