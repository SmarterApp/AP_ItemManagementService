package org.opentestsystem.ap.ims.service.export.writer;

import com.itextpdf.html2pdf.ConverterProperties;
import com.itextpdf.html2pdf.HtmlConverter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.IBlockElement;
import com.itextpdf.layout.element.IElement;
import org.opentestsystem.ap.common.saaif.item.ItemRelease;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.util.List;
import java.util.Map;

import static java.util.stream.Collectors.groupingBy;

public abstract class PdfContentWriter {
    protected void addPromptToDocument(Document document, Map<String, List<ItemRelease.Item.Content>> contentLanguages, ConverterProperties properties) {
        ItemRelease.Item.Content english = contentLanguages.get("ENU").get(0);

        addHtmlToPdf(document, properties, english.getStem());
    }

    protected void addHtmlToPdf(final Document document, final ConverterProperties properties, String html) {
        try {
            List<IElement> elements = HtmlConverter.convertToElements(new ByteArrayInputStream(html.getBytes()), properties);

            for (IElement element : elements) {
                document.add((IBlockElement) element);
            }
        } catch (IOException e) {
            throw new RuntimeException("Error encountered when converting content to PDF", e);
        }
    }

    protected Map<String, List<ItemRelease.Item.Content>> groupContentByLanguage(final ItemRelease itemRelease) {
        return itemRelease.getItem().getContent().stream()
                .collect(groupingBy(ItemRelease.Item.Content::getLanguage));
    }
}
