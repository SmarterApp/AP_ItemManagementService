/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package org.opentestsystem.ap.ims.service;

import org.apache.commons.lang3.StringUtils;
import org.opentestsystem.ap.common.util.AttachmentValidator;
import org.opentestsystem.ap.common.exception.ValidationException;
import org.opentestsystem.ap.ims.model.UploadFile;
import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;

import static org.apache.commons.lang3.StringUtils.endsWithIgnoreCase;
import static org.apache.commons.lang3.StringUtils.isBlank;
import static org.opentestsystem.ap.ims.service.ValidatorMessages.FILE_UPLOAD_NO_DATA;
import static org.opentestsystem.ap.ims.service.ValidatorMessages.SECTION_REQUIRED;

@Component
public class FileUploadServiceValidator {

    private static final String GI_ZIP_FILE_NAME = "gi-content.zip";

    private final AttachmentValidator validator;

    public FileUploadServiceValidator(final AttachmentValidator validator) {
        this.validator = validator;
    }

    // ------------------------------------------------------------------------

    public void validateUploadedFile(final UploadFile uploadFile) {
        if (uploadFile == null) {
            throw new ValidationException(FILE_UPLOAD_NO_DATA);
        }
        if (StringUtils.isBlank(uploadFile.getSection())) {
            throw new ValidationException(SECTION_REQUIRED);
        }
        if (isBlank(uploadFile.getItemId())) {
            throw new ValidationException("Item ID cannot be blank in upload request");
        }
        final MultipartFile file = uploadFile.getFile();
        if (file == null) {
            throw new ValidationException("No file found in upload request");
        }
        if (file.isEmpty()) {
            throw new ValidationException("File is empty");
        }
    }

    public void validateGiUploadFile(final UploadFile uploadFile) {
        final MultipartFile file = uploadFile.getFile();

        final String fileName = file.getOriginalFilename();

        if (!endsWithIgnoreCase(fileName, "zip")) {
            throw new ValidationException("File name does not end in '.zip'");
        }
    }
}
