package org.opentestsystem.ap.ims.service.export.writer;

import com.itextpdf.html2pdf.ConverterProperties;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.StimItem;
import org.opentestsystem.ap.common.saaif.item.ItemRelease;
import org.springframework.stereotype.Component;

import java.nio.file.Path;
import java.util.List;
import java.util.Map;

import static java.util.stream.Collectors.groupingBy;

@Component
public class StimItemContentWriter extends PdfContentWriter implements ItemContentWriter {
    @Override
    public boolean supportsItemType(final Item item) {
        return item instanceof StimItem;
    }

    @Override
    public void addContent(final PdfWriter pdfWriter, final Document document, final Item item, final ItemRelease itemRelease, ConverterProperties properties,  Path clonedItemDirectory) {
        Map<String, List<ItemRelease.Passage.Content>> contentLanguages = groupContentByLanguage(itemRelease);

        for (ItemRelease.Passage.Content content : contentLanguages.get(englishCode)) {
            addHtmlToPdf(document, properties, content.getStem());
        }
    }

    protected Map<String, List<ItemRelease.Passage.Content>> groupContentByLanguage(final ItemRelease itemRelease) {
        return itemRelease.getPassage()
                .getContent()
                .stream()
                .collect(groupingBy(ItemRelease.Passage.Content::getLanguage));
    }
}
