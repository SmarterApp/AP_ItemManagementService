package org.opentestsystem.ap.ims.service.impl;

import lombok.extern.slf4j.Slf4j;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.common.datastore.entity.ItemEntity;
import org.opentestsystem.ap.common.rest.item.ItemCommitResponse;
import org.opentestsystem.ap.common.rest.item.ItemEntityResponse;
import org.opentestsystem.ap.ims.service.ItemEntityService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.UUID;

@Slf4j
@Service
public class ItemEntityServiceImpl implements ItemEntityService {

    private final DataStoreDataManager dataStoreDataManager;


    @Autowired
    public ItemEntityServiceImpl(DataStoreDataManager dataStoreDataManager) {
        this.dataStoreDataManager = dataStoreDataManager;
    }

    @Override
    public Optional<ItemEntityResponse> findItemEntityById(UUID id) {
        ItemEntity entity = dataStoreDataManager.findItemEntityById(id);
        return Objects.isNull(entity) ? Optional.empty() : Optional.of(ItemEntityResponse.fromEntity(entity));
    }

    @Override
    public ItemCommitResponse findMasterItemCommitsSinceCommit(String itemId, UUID fromCommitId) {
        List<UUID> commitsSinceFromCommit = dataStoreDataManager.findCommitsSinceCommit(itemId, fromCommitId);
        return new ItemCommitResponse(itemId, commitsSinceFromCommit);
    }

    @Override
    public Optional<ItemEntityResponse> findLatestItemEntity(final String itemId) {
        ItemEntity entity = dataStoreDataManager.findLastMaster(itemId);
        return Objects.isNull(entity) ? Optional.empty() : Optional.of(ItemEntityResponse.fromEntity(entity));
    }

    @Override
    public ItemCommitResponse findAllItemCommits(final String itemId) {
        List<UUID> commits = dataStoreDataManager.findCommitsForItem(itemId);
        return new ItemCommitResponse(itemId, commits);
    }
}
