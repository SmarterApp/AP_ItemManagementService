/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestsystem.ap.ims.config;

import org.opentestsystem.ap.common.config.ItemBankProperties;
import org.opentestsystem.ap.common.datastore.entity.SecurityAuditorAware;
import org.opentestsystem.ap.common.datastore.repository.DataStoreIdGenerator;
import org.opentestsystem.ap.common.datastore.repository.SequenceRepository;
import org.opentestsystem.ap.common.itembank.IdGenerator;
import org.opentestsystem.ap.common.util.SecurityUtil;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.domain.AuditorAware;
import org.springframework.data.jpa.repository.config.EnableJpaAuditing;

/**
 * Configures beans that interface with the database.  The 'itemIdGenerator' bean defined here means the ap-common
 * library won't generate one.  The name 'itemIdGenerator' is important so do not change it or there will be two
 * instances of an SaaifIdGenerator in the application context which will result in an error.
 */
@Configuration
@EnableJpaAuditing(auditorAwareRef = "auditorAware")
public class DatabaseConfig {

    private final ItemBankProperties props;

    private final SequenceRepository sequenceRepository;

    public DatabaseConfig(final ItemBankProperties props, final SequenceRepository sequenceRepository) {
        this.props = props;
        this.sequenceRepository = sequenceRepository;
    }

    @Bean
    public IdGenerator itemIdGenerator() {
        return new DataStoreIdGenerator(props.getIdMinValue(), props.getIdMaxValue(), sequenceRepository);
    }

    @Bean
    public AuditorAware<String> auditorAware(SecurityUtil securityUtil) {
        return new SecurityAuditorAware(securityUtil);
    }
}
