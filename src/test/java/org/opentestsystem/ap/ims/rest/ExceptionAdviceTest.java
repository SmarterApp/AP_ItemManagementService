/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package org.opentestsystem.ap.ims.rest;

import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.ap.common.exception.ValidationException;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;

public class ExceptionAdviceTest {

    private ExceptionAdvice exceptionAdvice;

    @Before
    public void setup() {
        exceptionAdvice = new ExceptionAdvice();
    }

    @Test
    public void itShouldHandleValidationException() {
        final ValidationException validationException = new ValidationException("validation error");

        final ResponseEntity<List<ErrorMessage>> responseEntity = exceptionAdvice.handleBadRequest(validationException);

        assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.BAD_REQUEST);
        assertThat(responseEntity.getBody()).hasSize(1);
        assertThat(responseEntity.getBody().get(0).getMessage()).isEqualTo("validation error");
    }
}
