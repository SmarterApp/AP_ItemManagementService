package org.opentestsystem.ap.ims.service;

import org.junit.After;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TemporaryFolder;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;
import org.opentestsystem.ap.common.datastore.DataStoreAttachmentManager;
import org.opentestsystem.ap.common.datastore.DataStoreDataManager;
import org.opentestsystem.ap.ims.ItemResourceProperties;

import java.io.File;
import java.io.IOException;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(MockitoJUnitRunner.class)
public class ItemResourceServiceTest {

    @Rule
    public TemporaryFolder folder= new TemporaryFolder();

    @Mock
    private DataStoreDataManager dataStoreDataManager;

    @Mock
    private DataStoreAttachmentManager dataStoreAttachmentManager;

    private ItemResourceProperties itemResourceProperties;

    private ItemResourceService service;

    private File testFolder;

    @Before
    public void setup() throws IOException {

        this.folder = new TemporaryFolder();
        this.folder.create();

        this.testFolder = this.folder.newFolder("ItemManagementServiceTest");

        this.itemResourceProperties = new ItemResourceProperties();
        this.itemResourceProperties.setResourceDir(this.testFolder.getAbsolutePath());
        this.itemResourceProperties.getMappings().put("brf", "application/braille");
        this.itemResourceProperties.getMappings().put("prn", "application/braille");
        this.itemResourceProperties.getMappings().put("qrx", "application/xml");

        this.service = new ItemResourceService(this.itemResourceProperties, dataStoreDataManager,
            dataStoreAttachmentManager);

        this.service.initialize();
    }

    @After
    public void tearDown() {
        this.folder.delete();
    }

    @Test
    public void testDetermineMediaTypeByFileName() throws IOException {
        this.assertDetermineMediaTypeByFileName("braille.brf", "application/braille");
        this.assertDetermineMediaTypeByFileName("braille.prn", "application/braille");
        this.assertDetermineMediaTypeByFileName("scoring.qrx", "application/xml");
    }

    private void assertDetermineMediaTypeByFileName(String fileName, String expectedContentType) throws IOException {
        File file = this.folder.newFile(fileName);
        String contentType = this.service.determineMediaType(fileName);
        assertThat(contentType).isEqualTo(expectedContentType);
    }
}
